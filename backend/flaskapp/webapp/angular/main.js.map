{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/component.utils.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/user/account/account.component.css","webpack:///./src/app/components/user/account/account.component.html","webpack:///./src/app/components/user/account/account.component.ts","webpack:///./src/app/components/user/create-user/create-user.component.css","webpack:///./src/app/components/user/create-user/create-user.component.html","webpack:///./src/app/components/user/create-user/create-user.component.ts","webpack:///./src/app/components/user/user-edit/user-edit.component.css","webpack:///./src/app/components/user/user-edit/user-edit.component.html","webpack:///./src/app/components/user/user-edit/user-edit.component.ts","webpack:///./src/app/components/user/user-list/user-list.component.css","webpack:///./src/app/components/user/user-list/user-list.component.html","webpack:///./src/app/components/user/user-list/user-list.component.ts","webpack:///./src/app/interceptors/token.interceptor.ts","webpack:///./src/app/model/model.search.ts","webpack:///./src/app/model/model.user.ts","webpack:///./src/app/services/auth/auth.service.ts","webpack:///./src/app/services/notification/notification.service.ts","webpack:///./src/app/services/user/user.service.ts","webpack:///./src/app/statics/form-validators.ts","webpack:///./src/app/statics/local-storage.ts","webpack:///./src/app/statics/server-url.ts","webpack:///./src/app/urlPermission/url.permission.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './components/login/login.component';\nimport { CreateUserComponent } from './components/user/create-user/create-user.component';\nimport { LoginPermission, SameUserPermission, AdminPermission } from './urlPermission/url.permission';\nimport { UserListComponent } from './components/user/user-list/user-list.component';\nimport { UserEditComponent } from './components/user/user-edit/user-edit.component';\nimport { AccountComponent } from './components/user/account/account.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'user/createUser', component: CreateUserComponent, canActivate: [AdminPermission]},\n  { path: 'user/users', component: UserListComponent, canActivate: [AdminPermission]},\n  { path: 'user/edit/:id', component: UserEditComponent, canActivate: [AdminPermission]},\n  { path: 'user/account/:username', component: AccountComponent, canActivate: [SameUserPermission]},\n\n\n  // otherwise redirect to profile\n  { path: '**', redirectTo: '/' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"/* Override bootstrap style when click a dropdown-item */\\n.dropdown-item.active, .dropdown-item:active {\\n    color: #fff;\\n    background-color: slategray;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsd0RBQXdEO0FBQ3hEO0lBQ0ksV0FBVztJQUNYLDJCQUEyQjtBQUMvQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogT3ZlcnJpZGUgYm9vdHN0cmFwIHN0eWxlIHdoZW4gY2xpY2sgYSBkcm9wZG93bi1pdGVtICovXG4uZHJvcGRvd24taXRlbS5hY3RpdmUsIC5kcm9wZG93bi1pdGVtOmFjdGl2ZSB7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogc2xhdGVncmF5O1xufSJdfQ== */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark justify-content-between\\\">\\n  <ul class=\\\"navbar-nav mr-auto\\\">\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" routerLink=\\\"#\\\" routerLinkActive=\\\"active\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" *ngIf=\\\"hasRole('ROLE_USER')\\\" routerLink=\\\"#\\\" routerLinkActive=\\\"active\\\">User Feature</a>\\n    </li>\\n  </ul>\\n  <ul class=\\\"navbar-nav ml-auto\\\">\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" *ngIf=\\\"!currentUser\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">\\n        <span class=\\\"fa fa-sign-in\\\"></span> Login</a>\\n      <a class=\\\"nav-item btn-group\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"currentUser\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" \\n          aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"dropdown-alignment\\\">\\n          <span class=\\\"fa fa-user-circle\\\"></span> {{currentUser.username}}\\n        </a>\\n        <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" *ngIf=\\\"hasRole('ROLE_USER')\\\" routerLink=\\\"user/account/{{currentUser.username}}\\\">\\n            <span class=\\\"fa fa-user-circle\\\"></span> Account\\n          </a>\\n          <a class=\\\"dropdown-item\\\" *ngIf=\\\"hasRole('ROLE_ADMIN')\\\" routerLink=\\\"user/createUser\\\">\\n            <span class=\\\"fa fa-user-plus\\\"></span> Create user\\n          </a>\\n          <a class=\\\"dropdown-item\\\" *ngIf=\\\"hasRole('ROLE_ADMIN')\\\" routerLink=\\\"user/users\\\">\\n            <span class=\\\"fa fa-users\\\"></span> Users\\n          </a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">\\n            <span class=\\\"fa fa-sign-out\\\"></span> Logout\\n          </a>\\n        </div>\\n      </a>\\n    </li>\\n  </ul>\\n</nav>\\n<div *ngFor=\\\"let alert of alerts\\\">\\n  <alert [type]=\\\"alert.type\\\" [dismissible]=true [dismissOnTimeout]=\\\"alert.timeout\\\" (onClosed)=\\\"onClosed(alert)\\\">{{ alert.msg }}</alert>\\n</div>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AlertComponent } from 'ngx-bootstrap/alert/alert.component';\n\nimport { User } from './model/model.user';\nimport { NotificationService } from './services/notification/notification.service';\nimport { ComponentUtils } from './components/component.utils';\nimport { LocalStorage } from './statics/local-storage';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent extends ComponentUtils {\n\n  title = 'MyApp';\n  alerts: any[] = [];\n\n  constructor(private notificationService: NotificationService, private router: Router) {\n      super(notificationService);\n      this.updateUser()\n      this.notificationService.successMessage$.subscribe(\n        message => {\n          this.addAlerts(\"success\", message, 5000)\n        }\n      );\n      \n      this.notificationService.warningMessage$.subscribe(\n        message => {\n          this.addAlerts(\"warning\", message, 10000)\n        }\n      );\n\n      this.notificationService.errorMessage$.subscribe(\n        message => {\n          this.addAlerts(\"danger\", message, 15000)\n        }\n      );\n  }\n\n  private messageIsRepted(msg: string): boolean {\n    \n    let isRepted = false\n    this.alerts.forEach(alert => {\n      if (alert.msg == msg){\n        isRepted = true\n      } \n    })\n    return isRepted\n    \n  }\n\n  private addAlerts(type: string, msg: string, timeout: number){\n\n    // Check if alert already has this message. Only add a new one if msg is new. \n    if (!this.messageIsRepted(msg)){\n      this.alerts.push({\n        type: type,\n        msg: msg,\n        timeout: timeout\n      });\n    }\n  }\n\n  onClosed(dismissedAlert: AlertComponent): void {\n    this.alerts = this.alerts.filter(alert => alert !== dismissedAlert);\n  }\n\n  public updateUser() {\n    this.currentUser = LocalStorage.currentUser\n  }\n\n  public syncUser(user: User) {\n    LocalStorage.removeCurrentUser()\n    LocalStorage.saveCurrentUser(user)\n    this.updateUser()\n  }\n\n  public logout() {\n    this.currentUser = null\n    LocalStorage.removeCurrentUser()\n    this.notificationService.showSuccessMessage(\"You were logged out.\")\n    this.router.navigate(['/login']);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserService } from './services/user/user.service';\nimport { TokenInterceptor } from './interceptors/token.interceptor';\nimport { AuthService } from './services/auth/auth.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { NotificationService } from './services/notification/notification.service';\nimport { CreateUserComponent } from './components/user/create-user/create-user.component';\nimport { LoginPermission, SameUserPermission, AdminPermission } from './urlPermission/url.permission';\nimport { UserListComponent } from './components/user/user-list/user-list.component';\nimport { UserEditComponent } from './components/user/user-edit/user-edit.component';\nimport { AccountComponent } from './components/user/account/account.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    CreateUserComponent,\n    UserListComponent,\n    UserEditComponent,\n    AccountComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ButtonsModule.forRoot(),\n    AlertModule.forRoot(),\n    TabsModule.forRoot(),\n    ModalModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    PaginationModule.forRoot(),\n    TypeaheadModule.forRoot(),\n    CollapseModule.forRoot()\n  ],\n  providers: [\n    AuthService,\n    NotificationService,\n    UserService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n    LoginPermission,\n    SameUserPermission,\n    AdminPermission\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NotificationService } from '../services/notification/notification.service';\nimport { User } from '../model/model.user';\nimport { LocalStorage } from '../statics/local-storage';\n\nexport abstract class ComponentUtils {\n\n    // bsConfig = Object.assign({}, {locale: 'de', containerClass: 'theme-dark-blue', dateInputFormat: 'DD.MM.YYYY'});\n    currentUser: User = LocalStorage.currentUser\n    \n    constructor(private __notificationService: NotificationService) {\n  \n    }\n  \n    public showSuccessMessage(message: string) {\n      this.__notificationService.showSuccessMessage(message);\n    }\n\n    public showWarningMessage(message: string) {\n        this.__notificationService.showWarningMessage(message);\n    }\n  \n    public showErrorMessage(message: string) {\n      this.__notificationService.showErrorMessage(message);\n    }\n\n    protected userHasRole(user: User, role: string): boolean {\n        if (user == null) {\n          return false;\n        }\n        if (user.roles != null && user.roles.includes(role)) {\n          return true;\n        }\n        return false;\n    }\n\n    public hasRole(role: string): boolean {\n        return this.userHasRole(this.currentUser, role);\n    }\n  }","module.exports = \".card-container.card {\\n    max-width: 350px;\\n    padding: 40px 40px;\\n}\\n\\n/*\\n* Card component\\n*/\\n\\n.card {\\n    background-color: #F7F7F7;\\n    /* just in case there no content*/\\n    padding: 20px 25px 30px;\\n    margin: 0 auto 25px;\\n    margin-top: 50px;\\n    /* shadows and rounded borders */\\n    border-radius: 2px;\\n    box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\\n}\\n\\n.profile-img-card {\\n    width: 96px;\\n    height: 96px;\\n    margin: 0 auto 10px;\\n    display: block;\\n    border-radius: 50%;\\n}\\n\\n/*\\n* Form styles\\n*/\\n\\n.profile-name-card {\\n    font-size: 16px;\\n    font-weight: bold;\\n    text-align: center;\\n    margin: 10px 0 0;\\n    min-height: 1em;\\n}\\n\\n.reauth-email {\\n    display: block;\\n    color: #404040;\\n    line-height: 2;\\n    margin-bottom: 10px;\\n    font-size: 14px;\\n    text-align: center;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    box-sizing: border-box;\\n}\\n\\n.form-signin #inputEmail,\\n.form-signin #inputPassword {\\n    direction: ltr;\\n    height: 44px;\\n    font-size: 16px;\\n}\\n\\n.form-signin input[type=email],\\n.form-signin input[type=password],\\n.form-signin input[type=text],\\n.form-signin button {\\n    width: 100%;\\n    display: block;\\n    margin-bottom: 10px;\\n    z-index: 1;\\n    position: relative;\\n    box-sizing: border-box;\\n}\\n\\n.form-signin .form-control:focus {\\n    border-color: rgb(104, 145, 162);\\n    outline: 0;\\n    box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgb(104, 145, 162);\\n}\\n\\n.forgot-password {\\n    color: rgb(104, 145, 162);\\n}\\n\\n.forgot-password:hover,\\n.forgot-password:active,\\n.forgot-password:focus{\\n    color: rgb(12, 97, 33);\\n}\\n\\n.help-block{\\n    color: red\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0Qjs7QUFFQTs7Q0FFQzs7QUFDRDtJQUNJLHlCQUF5QjtJQUN6QixpQ0FBaUM7SUFDakMsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsZ0NBQWdDO0lBR2hDLGtCQUFrQjtJQUdsQiwwQ0FBMEM7QUFDOUM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixjQUFjO0lBR2Qsa0JBQWtCO0FBQ3RCOztBQUVBOztDQUVDOztBQUNEO0lBQ0ksZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsY0FBYztJQUNkLGNBQWM7SUFDZCxtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUduQixzQkFBc0I7QUFDMUI7O0FBRUE7O0lBRUksY0FBYztJQUNkLFlBQVk7SUFDWixlQUFlO0FBQ25COztBQUVBOzs7O0lBSUksV0FBVztJQUNYLGNBQWM7SUFDZCxtQkFBbUI7SUFDbkIsVUFBVTtJQUNWLGtCQUFrQjtJQUdsQixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxnQ0FBZ0M7SUFDaEMsVUFBVTtJQUVWLHVFQUF1RTtBQUMzRTs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3Qjs7QUFFQTs7O0lBR0ksc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0k7QUFDSiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWNvbnRhaW5lci5jYXJkIHtcbiAgICBtYXgtd2lkdGg6IDM1MHB4O1xuICAgIHBhZGRpbmc6IDQwcHggNDBweDtcbn1cblxuLypcbiogQ2FyZCBjb21wb25lbnRcbiovXG4uY2FyZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0Y3RjdGNztcbiAgICAvKiBqdXN0IGluIGNhc2UgdGhlcmUgbm8gY29udGVudCovXG4gICAgcGFkZGluZzogMjBweCAyNXB4IDMwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG8gMjVweDtcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xuICAgIC8qIHNoYWRvd3MgYW5kIHJvdW5kZWQgYm9yZGVycyAqL1xuICAgIC1tb3otYm9yZGVyLXJhZGl1czogMnB4O1xuICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgICAtbW96LWJveC1zaGFkb3c6IDBweCAycHggMnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDBweCAycHggMnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgICBib3gtc2hhZG93OiAwcHggMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG59XG5cbi5wcm9maWxlLWltZy1jYXJkIHtcbiAgICB3aWR0aDogOTZweDtcbiAgICBoZWlnaHQ6IDk2cHg7XG4gICAgbWFyZ2luOiAwIGF1dG8gMTBweDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICAtbW96LWJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG59XG5cbi8qXG4qIEZvcm0gc3R5bGVzXG4qL1xuLnByb2ZpbGUtbmFtZS1jYXJkIHtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbjogMTBweCAwIDA7XG4gICAgbWluLWhlaWdodDogMWVtO1xufVxuXG4ucmVhdXRoLWVtYWlsIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjb2xvcjogIzQwNDA0MDtcbiAgICBsaW5lLWhlaWdodDogMjtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLmZvcm0tc2lnbmluICNpbnB1dEVtYWlsLFxuLmZvcm0tc2lnbmluICNpbnB1dFBhc3N3b3JkIHtcbiAgICBkaXJlY3Rpb246IGx0cjtcbiAgICBoZWlnaHQ6IDQ0cHg7XG4gICAgZm9udC1zaXplOiAxNnB4O1xufVxuXG4uZm9ybS1zaWduaW4gaW5wdXRbdHlwZT1lbWFpbF0sXG4uZm9ybS1zaWduaW4gaW5wdXRbdHlwZT1wYXNzd29yZF0sXG4uZm9ybS1zaWduaW4gaW5wdXRbdHlwZT10ZXh0XSxcbi5mb3JtLXNpZ25pbiBidXR0b24ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgei1pbmRleDogMTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4uZm9ybS1zaWduaW4gLmZvcm0tY29udHJvbDpmb2N1cyB7XG4gICAgYm9yZGVyLWNvbG9yOiByZ2IoMTA0LCAxNDUsIDE2Mik7XG4gICAgb3V0bGluZTogMDtcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKDAsMCwwLC4wNzUpLDAgMCA4cHggcmdiKDEwNCwgMTQ1LCAxNjIpO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKDAsMCwwLC4wNzUpLDAgMCA4cHggcmdiKDEwNCwgMTQ1LCAxNjIpO1xufVxuXG4uZm9yZ290LXBhc3N3b3JkIHtcbiAgICBjb2xvcjogcmdiKDEwNCwgMTQ1LCAxNjIpO1xufVxuXG4uZm9yZ290LXBhc3N3b3JkOmhvdmVyLFxuLmZvcmdvdC1wYXNzd29yZDphY3RpdmUsXG4uZm9yZ290LXBhc3N3b3JkOmZvY3Vze1xuICAgIGNvbG9yOiByZ2IoMTIsIDk3LCAzMyk7XG59XG5cbi5oZWxwLWJsb2Nre1xuICAgIGNvbG9yOiByZWRcbn0iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"card card-container\\\">\\n    <img class=\\\"profile-img-card\\\" src=\\\"./assets/images/mario.jpg\\\" alt=\\\"\\\" />\\n    <p id=\\\"profile-name\\\" class=\\\"profile-name-card\\\"></p>\\n\\n    <form name=\\\"form-signin\\\" (ngSubmit)=\\\"f.form.valid && login()\\\" #f=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\n    <span id=\\\"reauth-email\\\" class=\\\"reauth-email\\\"></span>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': f.submitted && !username.valid }\\\">\\n      <label for=\\\"username\\\">Username</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" #username=\\\"ngModel\\\" required />\\n      <div *ngIf=\\\"f.submitted && !username.valid\\\" class=\\\"help-block\\\">Please, insert an username.</div>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': f.submitted && !password.valid }\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" #password=\\\"ngModel\\\" required />\\n      <div *ngIf=\\\"f.submitted && !password.valid\\\" class=\\\"help-block\\\">Please, insert a password.</div>\\n    </div>\\n    <div id=\\\"remember\\\" class=\\\"checkbox\\\"></div>\\n\\n      <!--<button class=\\\"btn btn-lg btn-primary btn-block btn-signin\\\" type=\\\"submit\\\">Anmelden</button>-->\\n      <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Sign in</button>\\n    </form><!-- /form -->\\n  </div><!-- /card-container -->\\n</div><!-- /container -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { User } from '../../model/model.user';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { NotificationService } from '../../services/notification/notification.service';\nimport { LocalStorage } from '../../statics/local-storage';\nimport { AppComponent } from '../../app.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user: User = new User();\n  constructor(private authService: AuthService, private notificationService: NotificationService, \n    private router: Router, private appComponent: AppComponent) {\n\n      // If user is logged redirect to home.\n      if (LocalStorage.currentUser) {\n        this.redirectToHome();\n      }\n  }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.authService.login(this.user).subscribe(\n      user => {\n        if (user) {\n          this.notificationService.showSuccessMessage(\"Logged in as \" + user.username)\n          LocalStorage.saveCurrentUser(user)\n          this.redirectToHome();\n        } else {\n          this.notificationService.showErrorMessage(\"Username or password don't match, try again.\")\n        }\n      },\n      error => {\n        this.notificationService.showErrorMessage(error.message)\n        console.log(error);\n      }\n    );\n  }\n\n  private redirectToHome(){\n    this.router.navigate(['/']);\n    this.appComponent.updateUser();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9hY2NvdW50L2FjY291bnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"userForm\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 offset-md-3\\\">\\n      <h2>Change profile</h2>\\n      <form [formGroup]=\\\"userForm\\\"  (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>First Name</label>\\n          <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" \\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\" \\n            placeholder=\\\"First name\\\" />\\n          <div class=\\\"invalid-feedback\\\">First Name is required</div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Last Name</label>\\n          <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\" \\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\"\\n            placeholder=\\\"Last name\\\" />\\n          <div class=\\\"invalid-feedback\\\">Last Name is required.</div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Username</label>\\n          <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" \\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\"\\n            autocomplete=\\\"off\\\"/>\\n          <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.username.errors.required\\\">Username is required.</div>\\n            <div *ngIf=\\\"f.username.errors.isTaken\\\">This username already exists.</div>\\n          </div>\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"form-group btn btn-info\\\" (click)=\\\"onChangePassword()\\\"\\n          [attr.aria-expanded]=\\\"!changePassword\\\" aria-controls=\\\"collapseBasic\\\">Change password\\n        </button>\\n        <div id=\\\"collapseBasic\\\" [collapse]=\\\"!changePassword\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>New Password</label>\\n              <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" \\n                [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"\\n                autocomplete=\\\"off\\\"/>\\n              <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.password.errors.required\\\">Password is required.</div>\\n                <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least {{passwordMinLenght}} characters.</div>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>Confirm new password</label>\\n              <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" class=\\\"form-control\\\" \\n                [ngClass]=\\\"{ 'is-invalid': submitted && f.confirmPassword.errors }\\\" \\n                autocomplete=\\\"off\\\"/>\\n              <div class=\\\"invalid-feedback\\\">\\n                <div>Password doesn't match.</div>\\n              </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button [disabled]=\\\"userForm.pending\\\" class=\\\"btn btn-info\\\">Save</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { NotificationService } from '../../../services/notification/notification.service';\nimport { UserService } from '../../../services/user/user.service';\nimport { User } from '../../../model/model.user';\nimport { UserValidador, AppValidador } from '../../../statics/form-validators';\nimport { AppComponent } from '../../../app.component';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  user: User\n  userForm: FormGroup;\n  passwordMinLenght = AppValidador.passwordMinLenght\n  changePassword = false\n  submitted = false\n\n  constructor(private route: ActivatedRoute, private formBuilder: FormBuilder, private appComponent: AppComponent,\n    private notificationService: NotificationService, private userService: UserService) {\n      this.route.params.subscribe(\n        params => {\n          if (params && params.username) {\n            this.userService.getByUsername(params.username).subscribe(\n              data => {\n                this.user = data\n                this.buildForm(this.user)\n              },\n              error => {\n                this.notificationService.showErrorMessage(error.message)\n                console.log(error);\n              }\n            )\n          }\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    }\n\n  ngOnInit() {\n  }\n\n  buildForm(user: User){\n    this.userForm = this.formBuilder.group({\n      username: [this.user.username, {validators: [Validators.required], asyncValidators: [UserValidador.validateUsername(this.userService, 500, [this.user.username])], updateOn: 'change'}],\n      firstName: [user.name, {validators: Validators.required, updateOn: 'change'}],\n      lastName: [user.surname, {validators: Validators.required, updateOn: 'change'}],\n      password: ['', {validators: [], updateOn: 'change'}],\n      confirmPassword: ['', {validators: [], updateOn: 'change'}],\n    });\n  }\n\n  onChangePassword(){\n    this.changePassword = !this.changePassword\n    if (this.changePassword) {\n      this.f.password.setValidators([Validators.required, Validators.minLength(this.passwordMinLenght)])\n      this.f.confirmPassword.setValidators([AppValidador.match(\"password\")])\n      this.f.password.updateValueAndValidity()\n      this.f.confirmPassword.updateValueAndValidity()\n    } else {\n      this.f.password.clearValidators()\n      this.f.confirmPassword.clearValidators()\n    }\n  }\n\n  get f() { return this.userForm.controls }\n\n  private formToUser(): User{\n    this.user.username = this.f.username.value\n    this.user.name = this.f.firstName.value\n    this.user.surname = this.f.lastName.value\n    if (this.changePassword) {\n      this.user.password = this.f.password.value\n    }\n    return this.user\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    \n    // Validade confirmPassowrd before submit.\n    this.f.confirmPassword.updateValueAndValidity()\n\n    // stop here if form is invalid\n    if (this.userForm.invalid) {\n        return;\n    }\n\n    const user = this.formToUser();\n\n    this.userService.selfUpdate(user).subscribe(\n      updateUser => {\n        if (updateUser){\n          this.notificationService.showSuccessMessage(\"Profile was uptodate.\")\n          this.appComponent.syncUser(updateUser)\n        } else {\n          this.notificationService.showErrorMessage(\"Fail to uptodate profile.\")\n        }\n      },\n      error => {\n        console.log(error);\n        this.notificationService.showErrorMessage(error.message)\n      }\n    );\n    \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9jcmVhdGUtdXNlci9jcmVhdGUtdXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"userForm\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 offset-md-3\\\">\\n      <h2>Create a new user</h2>\\n        <form [formGroup]=\\\"userForm\\\"  (ngSubmit)=\\\"onSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>First Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" \\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\" \\n              placeholder=\\\"First name\\\" />\\n            <div class=\\\"invalid-feedback\\\">First Name is required</div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Last Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\" \\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\"\\n              placeholder=\\\"Last name\\\" />\\n            <div class=\\\"invalid-feedback\\\">Last Name is required.</div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Username</label>\\n            <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" \\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\"\\n              autocomplete=\\\"off\\\"/>\\n            <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.username.errors.required\\\">Username is required.</div>\\n              <div *ngIf=\\\"f.username.errors.isTaken\\\">This username already exists.</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Password</label>\\n            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" \\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"\\n              autocomplete=\\\"off\\\"/>\\n            <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.password.errors.required\\\">Password is required.</div>\\n              <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least {{passwordMinLenght}} characters.</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Confirm password</label>\\n            <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" class=\\\"form-control\\\" \\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.confirmPassword.errors }\\\" \\n              autocomplete=\\\"off\\\"/>\\n            <div class=\\\"invalid-feedback\\\">\\n              <div>Password doesn't match.</div>\\n            </div>\\n          </div>\\n          <tabset>\\n            <!--Rollen Tab-->\\n            <tab heading=\\\"Roles\\\" id=\\\"roleTab\\\">\\n              <div class=\\\"form-group\\\" formGroupName=\\\"roles\\\">\\n                <div class=\\\"form-check\\\">\\n                  <div *ngFor=\\\"let role of roles\\\">\\n                    <input type=\\\"checkbox\\\" formControlName=\\\"{{role.role_id}}\\\" id=\\\"{{role.role_id}}\\\" class=\\\"form-check-input\\\" \\n                    [ngClass]=\\\"{ 'is-invalid': submitted && rolesForm.get(role.role_id).errors }\\\"\\n                    [checked]=\\\"role.selected\\\" (change)=\\\"onToogleRole(role)\\\"/>\\n                    <label class=\\\"form-check-label\\\" for=\\\"{{role.role_id}}\\\">\\n                      {{role.label}}\\n                    </label>\\n                    <div class=\\\"invalid-feedback\\\">\\n                      <div>You must select at least one role.</div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </tab>\\n            <!--Rechte \\n            <tab heading=\\\"Rights\\\" id=\\\"rightTab\\\">\\n              <div class=\\\"form-group mt-3\\\">\\n                <div class=\\\"col-sm-10\\\">\\n                  <div class=\\\"form-check\\\">\\n                    <div *ngFor=\\\"let right of rights\\\">\\n                      <input class=\\\"form-check-input\\\" id=\\\"{{right.authority}}\\\" type=\\\"checkbox\\\" \\n                      [checked]=\\\"right.selected\\\" (change)=\\\"right.selected = !right.selected\\\" \\n                      [disabled]=\\\"right.containedInRole\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"{{right.authority}}\\\">\\n                        {{right.label}}\\n                      </label>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </tab> Tab-->\\n          </tabset>\\n          <div class=\\\"form-group\\\">\\n            <button [disabled]=\\\"userForm.pending\\\" class=\\\"btn btn-info\\\">Register</button>\\n          </div>\\n        </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { User } from '../../../model/model.user';\nimport { Role } from '../../../model/model.role';\nimport { UserService } from '../../../services/user/user.service';\nimport { NotificationService } from '../../../services/notification/notification.service';\nimport { AppValidador, UserValidador } from '../../../statics/form-validators';\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})\nexport class CreateUserComponent implements OnInit {\n  userForm: FormGroup;\n  submitted = false;\n  passwordMinLenght = AppValidador.passwordMinLenght\n  roles: Role[] = []\n\n  constructor(private formBuilder: FormBuilder, private userService: UserService, private notificationService: NotificationService) { \n    this.userService.getRoles().subscribe(\n      roles=> {\n        roles.forEach(role => {\n          this.roles.push(role)\n        });\n        this.buildForm()\n      }, \n      error => {\n        console.log(error)\n        notificationService.showErrorMessage(error.error.message)\n      }\n      \n    );\n  }\n\n  ngOnInit() {\n    \n  }\n\n  buildForm(){\n    const roleForm = {}\n    for (const role of this.roles){\n      roleForm[role.role_id] = ['', {validators: [UserValidador.validateRoles(this.roles)], updateOn: 'change'}]\n    }\n\n    this.userForm = this.formBuilder.group({\n      username: [null, {validators: [Validators.required], asyncValidators: [UserValidador.validateUsername(this.userService)], updateOn: 'change'}],\n      firstName: ['', {validators: Validators.required, updateOn: 'change'}],\n      lastName: ['', {validators: Validators.required, updateOn: 'change'}],\n      password: ['', {validators: [Validators.required, Validators.minLength(this.passwordMinLenght)], updateOn: 'change'}],\n      confirmPassword: ['', {validators: [AppValidador.match(\"password\")], updateOn: 'change'}],\n      roles: this.formBuilder.group(roleForm)\n    });\n\n  }\n\n  get rolesForm (): FormGroup {return <FormGroup> this.userForm.get(\"roles\")}\n\n\n  onToogleRole(role: Role) {\n    role.selected = !role.selected\n\n    if (role.role_id == \"ROLE_ADMIN\" && role.selected) {\n      this.roles.forEach(role => {\n        if (role.role_id != \"ROLE_ADMIN\"){\n          this.rolesForm.get(role.role_id).disable()\n        }\n        role.selected = true}\n      )\n    } else if (role.role_id == \"ROLE_ADMIN\" && !role.selected){\n      this.roles.forEach(role =>  this.rolesForm.get(role.role_id).enable())\n    }\n\n    // Force validation of roles to sync. \n    this.roles.forEach(role => {      \n      this.rolesForm.get(role.role_id).updateValueAndValidity()\n    })\n    \n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.userForm.controls }\n  get roleControls() { return this.rolesForm.controls}\n\n  private formToUser(): User{\n    const user = new User()\n    user.id = null\n    user.token = null\n    user.username = this.f.username.value\n    user.name = this.f.firstName.value\n    user.surname = this.f.lastName.value\n    user.password = this.f.password.value\n    return user\n  }\n\n  addRoles(user: User) {\n    this.roles.forEach(role => {\n      if (role.selected){\n        user.roles.push(role.role_id)\n      }\n    })\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    \n    // Validade confirmPassowrd before submit.\n    this.f.confirmPassword.updateValueAndValidity()\n\n    // stop here if form is invalid   \n    if (this.userForm.invalid) {\n        return;\n    }\n\n    const user = this.formToUser();\n    this.addRoles(user)\n    \n    this.userService.createUser(user).subscribe(\n      wasCreated => {\n        if (wasCreated) {\n          this.notificationService.showSuccessMessage(\"User \" + user.username + \" was created.\")\n        } else {\n          console.log(\"Fail.\")\n          this.notificationService.showWarningMessage(\"Fail to create user. Check if this username already exists.\")\n        } \n      },\n      error => {\n        console.log(error)\n        this.notificationService.showErrorMessage(error.error.message)\n      } \n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci91c2VyLWVkaXQvdXNlci1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"userForm\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 offset-md-3\\\">\\n      <h2>Update the user {{user.username}}</h2>\\n      <form [formGroup]=\\\"userForm\\\"  (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"form-group\\\">\\n            <label>First Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" \\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\" \\n              placeholder=\\\"First name\\\" />\\n            <div class=\\\"invalid-feedback\\\">First Name is required</div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Last Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\" \\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\"\\n              placeholder=\\\"Last name\\\" />\\n            <div class=\\\"invalid-feedback\\\">Last Name is required.</div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Username</label>\\n          <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" \\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\"\\n            autocomplete=\\\"off\\\"/>\\n          <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.username.errors.required\\\">Username is required.</div>\\n            <div *ngIf=\\\"f.username.errors.isTaken\\\">This username already exists.</div>\\n          </div>\\n        </div>\\n        <tabset>\\n          <!--Rollen Tab-->\\n          <tab heading=\\\"Roles\\\" id=\\\"roleTab\\\">\\n            <div class=\\\"form-group\\\" formGroupName=\\\"roles\\\">\\n                <div class=\\\"form-check\\\">\\n                  <div *ngFor=\\\"let role of roles\\\">\\n                    <input type=\\\"checkbox\\\" formControlName=\\\"{{role.role_id}}\\\" id=\\\"{{role.role_id}}\\\" class=\\\"form-check-input\\\" \\n                    [ngClass]=\\\"{ 'is-invalid': submitted && rolesForm.get(role.role_id).errors }\\\"\\n                    [checked]=\\\"role.selected\\\" (change)=\\\"onToogleRole(role)\\\"/>\\n                    <label class=\\\"form-check-label\\\" for=\\\"{{role.role_id}}\\\">\\n                      {{role.label}}\\n                    </label>\\n                    <div class=\\\"invalid-feedback\\\">\\n                      <div>You must select at least one role.</div>\\n                    </div>\\n                  </div>\\n                </div>\\n            </div>\\n          </tab>\\n          <!--Rechte \\n          <tab heading=\\\"Rights\\\" id=\\\"rightTab\\\">\\n            <div class=\\\"form-group mt-3\\\">\\n              <div class=\\\"col-sm-10\\\">\\n                <div class=\\\"form-check\\\">\\n                  <div *ngFor=\\\"let right of rights\\\">\\n                    <input class=\\\"form-check-input\\\" id=\\\"{{right.authority}}\\\" type=\\\"checkbox\\\" \\n                    [checked]=\\\"right.selected\\\" (change)=\\\"right.selected = !right.selected\\\" \\n                    [disabled]=\\\"right.containedInRole\\\">\\n                    <label class=\\\"form-check-label\\\" for=\\\"{{right.authority}}\\\">\\n                      {{right.label}}\\n                    </label>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </tab> Tab-->\\n        </tabset>\\n        <div class=\\\"form-group\\\">\\n            <button [disabled]=\\\"userForm.pending\\\" class=\\\"btn btn-primary\\\">Save</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { forkJoin } from 'rxjs';\n\nimport { NotificationService } from '../../../services/notification/notification.service';\nimport { UserService } from '../../../services/user/user.service';\nimport { User } from '../../../model/model.user';\nimport { Role } from '../../../model/model.role';\nimport { UserValidador } from '../../../statics/form-validators';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit {\n\n  user: User\n  userForm: FormGroup;\n  submitted = false;\n  roles: Role[] = []\n\n  constructor(private route: ActivatedRoute, private router: Router, private formBuilder: FormBuilder, \n    private notificationService: NotificationService, private userService: UserService) {\n      this.route.params.subscribe(\n        params => {\n          if (params && params.id) {\n            forkJoin(\n              this.userService.get(params.id),\n              this.userService.getRoles()\n            ).subscribe(\n              data => {\n                this.user = data[0]\n                this.roles = data[1]\n                this.buildForm(this.user)\n              },\n              error => {\n                this.notificationService.showErrorMessage(error.message)\n                console.log(error);\n              }\n            )\n          }\n        },\n        error => {\n          console.log(error);\n        }\n      );\n  }\n\n  ngOnInit() {\n  }\n\n  buildForm(user: User){\n    const roleForm = {}\n    for (const role of this.roles){\n      if (this.user.roles.includes(role.role_id)){\n        role.selected = true\n      }\n      roleForm[role.role_id] = ['', {validators: [UserValidador.validateRoles(this.roles)], updateOn: 'change'}]\n    }\n\n    this.userForm = this.formBuilder.group({\n      username: [this.user.username, {validators: [Validators.required], asyncValidators: [UserValidador.validateUsername(this.userService, 500, [this.user.username])], updateOn: 'change'}],\n      firstName: [user.name, {validators: Validators.required, updateOn: 'change'}],\n      lastName: [user.surname, {validators: Validators.required, updateOn: 'change'}],\n      roles: this.formBuilder.group(roleForm)\n    });\n  }\n\n  get f() { return this.userForm.controls }\n  get rolesForm (): FormGroup {return <FormGroup> this.userForm.get(\"roles\")}\n\n  onToogleRole(role: Role) {\n    role.selected = !role.selected\n\n    if (role.role_id == \"ROLE_ADMIN\" && role.selected) {\n      this.roles.forEach(role => {\n        if (role.role_id != \"ROLE_ADMIN\"){\n          this.rolesForm.get(role.role_id).disable()\n        }\n        role.selected = true}\n      )\n    } else if (role.role_id == \"ROLE_ADMIN\" && !role.selected){\n      this.roles.forEach(role =>  this.rolesForm.get(role.role_id).enable())\n    }\n\n    // Force validation of roles to sync. \n    this.roles.forEach(role => {      \n      this.rolesForm.get(role.role_id).updateValueAndValidity()\n    })\n    \n  }\n\n  private formToUser(): User{\n    this.user.username = this.f.username.value\n    this.user.name = this.f.firstName.value\n    this.user.surname = this.f.lastName.value\n    return this.user\n  }\n\n  updateRoles(user: User) {\n    // Clean roles\n    user.roles = []\n    // Add selected\n    this.roles.forEach(role => {\n      if (role.selected){\n        user.roles.push(role.role_id)\n      }\n    })\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.userForm.invalid) {\n        return;\n    }\n\n    const user = this.formToUser();\n    this.updateRoles(user)\n    this.userService.updateUser(user).subscribe(\n      wasUpdate => {\n        if (wasUpdate) {\n          this.notificationService.showSuccessMessage(\"User was update.\")\n          this.router.navigate([\"/user/users\"])\n        } else {\n          this.notificationService.showErrorMessage(\"Fail to update user.\")\n        }\n      },\n      error => {\n        console.log(error);\n        this.notificationService.showErrorMessage(error.message)\n      }\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"page-header\\\">\\n  <h3 style=\\\"font-weight: bold; text-align: center; padding-bottom: 1%;\\\">Users</h3>\\n</div>\\n<div class=\\\"pull-left\\\">\\n  <a routerLink=\\\"/user/createUser\\\" class=\\\"btn btn-default\\\" *ngIf=\\\"hasRole('ROLE_ADMIN')\\\" title=\\\"Create a new user\\\">\\n    <span class=\\\"fa fa-user-plus icon-big icon-link\\\"></span>\\n  </a>\\n</div>\\n<div class=\\\"d-flex justify-content-start navbar\\\" id=\\\"header\\\">\\n  <div class=\\\"form-inline\\\">\\n    <input [(ngModel)]=\\\"searchUsername\\\"\\n      [typeahead]=\\\"dataSource\\\"\\n      (typeaheadLoading)=\\\"changeTypeaheadLoading($event)\\\"\\n      (typeaheadOnSelect)=\\\"typeaheadOnSelect($event)\\\"\\n      [typeaheadOptionsLimit]=\\\"10\\\"\\n      typeaheadWaitMs=\\\"500\\\"\\n      typeaheadOptionField=\\\"username\\\"\\n      placeholder=\\\"Username\\\"\\n      class=\\\"form-control mr-sm-2\\\">\\n    <button class=\\\"btn btn-outline-dark my-2 my-sm-0\\\" type=\\\"submit\\\"\\n      (click)=\\\"searchUsers(searchUsername,'username')\\\" [disabled]=\\\"typeaheadLoading\\\">\\n        <span *ngIf=\\\"typeaheadLoading\\\" class=\\\"fa fa-spinner fa-spin\\\"></span>\\n        <span *ngIf=\\\"!typeaheadLoading\\\" class=\\\"fa fa-search\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n<table class=\\\"table table-striped table-hover table-condensed\\\">\\n  <thead>\\n    <tr>\\n      <th>Username</th>\\n      <th>Role</th>\\n      <th>Name</th>\\n      <th></th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let user of users\\\">\\n      <td>{{user.username}}</td>\\n      <td>\\n        <i class=\\\"fa fa-cogs icon-medium\\\" *ngIf=\\\"userHasRole(user, 'ROLE_ADMIN')\\\" title=\\\"Admin\\\"></i>\\n        <i class=\\\"fa fa-user icon-medium\\\" *ngIf=\\\"userHasRole(user, 'ROLE_USER') && !userHasRole(user, 'ROLE_ADMIN')\\\" title=\\\"User\\\"></i>\\n      </td>\\n      <td>{{user.name}} {{user.surname}}</td>\\n      <td>\\n        <div class=\\\"pull-right\\\">\\n          <a routerLink=\\\"/user/edit/{{user.id}}\\\" class=\\\"btn btn-xs btn-default\\\" *ngIf=\\\"hasRole('ROLE_ADMIN')\\\" title=\\\"edit\\\">\\n            <span class=\\\"fa fa-pencil icon-medium\\\"></span>\\n          </a>\\n          <button (click)=\\\"openDeleteModal(deleteModalTemplate, user)\\\" class=\\\"btn btn-xs btn-default\\\" \\n            *ngIf=\\\"hasRole('ROLE_ADMIN')\\\" title=\\\"delete\\\" [disabled]=\\\"isCurrentUser(user)\\\">\\n            <span class=\\\"fa fa-trash-o icon-medium\\\"></span>\\n          </button>\\n        </div>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n<ng-template [ngTemplateOutlet]=\\\"pagination\\\"></ng-template>\\n\\n<!-- Modal temples -->\\n<ng-template #deleteModalTemplate let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Delete user {{deleteUser?.username}}</h4>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p>Are you sure you want to delete this user?</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"deleteUserFromModal()\\\">Delete</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"closeDeleteModal()\\\">Cancel</button>\\n  </div>\\n</ng-template>\\n\\n<ng-template #pagination>\\n    <div class=\\\"d-flex justify-content-end\\\">\\n        <div class=\\\"p-2\\\">\\n            <div class=\\\"btn-group\\\" dropdown style=\\\"padding-right: 10px;\\\">\\n                <button id=\\\"button-basic\\\" dropdownToggle type=\\\"button\\\" class=\\\"btn btn-dark dropdown-toggle\\\"\\n                aria-controls=\\\"dropdown-basic\\\">\\n                {{itemsPerPage}} <span class=\\\"caret\\\"></span>\\n                </button>\\n                <ul id=\\\"dropdown-basic\\\" *dropdownMenu class=\\\"dropdown-menu\\\"\\n                role=\\\"menu\\\" aria-labelledby=\\\"button-basic\\\">\\n                <li role=\\\"menuitem\\\"><button class=\\\"dropdown-item\\\" (click)=\\\"itemsPerPageChanged(10)\\\">10</button></li>\\n                <li role=\\\"menuitem\\\"><button class=\\\"dropdown-item\\\" (click)=\\\"itemsPerPageChanged(20)\\\">20</button></li>\\n                <li role=\\\"menuitem\\\"><button class=\\\"dropdown-item\\\" (click)=\\\"itemsPerPageChanged(50)\\\">50</button></li>\\n                <li role=\\\"menuitem\\\"><button class=\\\"dropdown-item\\\" (click)=\\\"itemsPerPageChanged(100)\\\">100</button></li>\\n                </ul>\\n            </div>\\n            </div>\\n        <div class=\\\"p-2\\\">\\n            <pagination [totalItems]=\\\"totalItems\\\" [(ngModel)]=\\\"page\\\" [itemsPerPage]=\\\"itemsPerPage\\\"\\n            (pageChanged)=\\\"pageChanged($event)\\\" [maxSize]=5\\n            [boundaryLinks]=\\\"true\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\"\\n            lastText=\\\"&raquo;\\\">\\n            </pagination>\\n        </div>\\n    </div>\\n</ng-template>\\n\"","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { mergeMap, map } from 'rxjs/operators';\n\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal'\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead/';\n\nimport { UserService } from '../../../services/user/user.service';\nimport { NotificationService } from '../../../services/notification/notification.service';\nimport { ComponentUtils } from '../../component.utils';\nimport { User } from '../../../model/model.user';\nimport { Search } from '../../../model/model.search';\n\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent extends ComponentUtils implements OnInit {\n\n  deleteModalRef: BsModalRef | null;\n  deleteUser: User;\n  users: User[] = []\n  page = 1;\n  itemsPerPage = 10;\n  totalItems = 0;\n  dataSource: Observable<User>\n  searchUsername: string\n  typeaheadLoading: boolean\n\n  constructor(private userService: UserService, private notificationService: NotificationService, private modalService: BsModalService) {\n    super(notificationService) \n    this.searchUsers()\n\n    // Search for user\n    this.dataSource = Observable.create((observer: any) => {\n      // Runs on every search\n      observer.next(this.searchUsername);\n    }).pipe(\n      mergeMap((term: string) => this.userService.search(this.buildQueryParams(term))\n      .pipe(\n        // Map search result observable to result list.\n        map((data) => {\n          return data.result;\n        }))\n      )\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  buildQueryParams(username=\"\", orderBy=\"\"): HttpParams {\n    const searchParms = new Search(\"username\", username).searchParms\n    searchParms.orderBy = orderBy\n    searchParms.orderDesc = false\n    searchParms.page = this.page\n    searchParms.perPage = this.itemsPerPage\n\n    return new HttpParams({ fromObject: searchParms });\n  }\n\n  isCurrentUser(user: User): boolean {\n    return this.currentUser.username == user.username\n  }\n\n  openDeleteModal(template: TemplateRef<any>, user: User) {\n    this.deleteModalRef = this.modalService.show(template);\n    this.deleteUser = user;\n  }\n\n  closeDeleteModal() {\n    this.deleteModalRef.hide();\n    this.deleteModalRef = null;\n  }\n\n  private removeUserFromList() {\n    if (this.deleteUser) {\n      const index = this.users.indexOf(this.deleteUser);\n      if (index > -1) {\n        this.users.splice(index, 1);\n      }\n    }\n  }\n\n  deleteUserFromModal() {\n    this.userService.deleteUser(this.deleteUser).subscribe(\n      wasDeleted => {\n        if (wasDeleted) {\n          this.notificationService.showSuccessMessage(\"User \" + this.deleteUser.username + \" has been deleted.\")\n          this.removeUserFromList()\n        } else {\n          this.notificationService.showWarningMessage(\"Fail to delete user \" + this.deleteUser.username + \".\")\n        }\n        this.deleteUser = null\n        this.closeDeleteModal()\n      },\n      error => {\n        console.log(error);\n        this.notificationService.showErrorMessage(error.error.message)\n        this.closeDeleteModal()    \n      }\n    )\n  }\n\n  pageChanged(event: PageChangedEvent) {\n    this.page = event.page;\n    this.searchUsers();\n  }\n\n  itemsPerPageChanged(itemsPerPage: number) {\n    this.itemsPerPage = itemsPerPage;\n    this.page = 1;\n    this.searchUsers();\n  }\n\n  changeTypeaheadLoading(e: boolean): void {\n    this.typeaheadLoading = e;\n  }\n\n  typeaheadOnSelect(e: TypeaheadMatch): void {\n    this.searchUsers(e.value, \"username\");\n  }\n\n  searchUsers(username=\"\", orderBy=\"username\"){\n    this.userService.search(this.buildQueryParams(username, orderBy)).subscribe(\n      data => {        \n        this.totalItems = data.total\n        this.users = data.result        \n      },\n      error => {\n        console.log(error);\n        this.notificationService.showErrorMessage(error.message)\n      }      \n    )\n    \n  }\n\n}\n","import {\n    HttpEvent,\n    HttpInterceptor,\n    HttpHandler,\n    HttpRequest,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LocalStorage } from '../statics/local-storage';\n  \nexport class TokenInterceptor implements HttpInterceptor {\n\n    constructor() { }\n  \n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const currentUser = LocalStorage.currentUser\n        \n        if (currentUser) {\n            // // Clone the request to add the new header\n            // const clonedRequest = req.clone({\n            //   headers: req.headers.set('X-Access-Token', currentUser.token)\n            // });\n            // // Pass the cloned request instead of the original request to the next handle\n            // return next.handle(clonedRequest);\n            // return next.handle(req.clone({ setHeaders: { 'X-Access-Token': currentUser.token } }));\n            return next.handle(req.clone({ setHeaders: { 'X-Access-Token': currentUser.token } }));\n          \n        } else {\n            return next.handle(req);\n        }\n    }\n}","export class Search {\n    public searchParms = {\n      \"searchBy\" : \"\",\n      \"searchValue\" :  \"\",\n      \"orderBy\" : \"\",\n      \"orderDesc\" : null,\n      \"page\" : null,\n      \"perPage\" : null \n    };\n  \n    constructor(searchBy: string, value: string) {\n      this.searchParms.searchBy = searchBy\n      this.searchParms.searchValue = value\n      this.searchParms.orderDesc = false \n      this.searchParms.page = 1\n      this.searchParms.perPage = 10\n    }\n}","export class User {\n    id: string;\n    token: string;\n    username  = '';\n    surname = '';\n    name = '';\n    password = '';\n    enabled = true;\n    accountNonExpired = true;\n    accountNonLocked = true;\n    credentialsNonExpired = true;\n    roles: string[] = [];\n    rights: string[] = [];\n    settings: string[] = [];\n}","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { ServerUrl } from '../../statics/server-url';\nimport { User } from '../../model/model.user';\n\n@Injectable()\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  login(user: User): Observable<User> {\n    // creating base64 encoded String from user name and password\n    // const base64Credential: string = btoa(user.username + ':' + user.password);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept': 'application/json',\n        /*'Authorization':  'Basic ' + base64Credential,*/\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      })\n    };\n    const loginForm = 'username=' + user.username + '&password=' + user.password;\n    return this.http.post<User>(ServerUrl.rootUrl + '/api/login', loginForm, httpOptions);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class NotificationService {\n\n    private successMessageSource = new Subject<string>();\n    successMessage$ = this.successMessageSource.asObservable();\n    private warningMessageSource = new Subject<string>();\n    warningMessage$ = this.warningMessageSource.asObservable();\n    private errorMessageSource = new Subject<string>();\n    errorMessage$ = this.errorMessageSource.asObservable();\n\n    constructor() { }\n\n    showSuccessMessage(message: string) {\n        this.successMessageSource.next(message);\n    }\n\n    showWarningMessage(message: string){\n        this.warningMessageSource.next(message);\n    }\n\n    showErrorMessage(message: string) {\n        this.errorMessageSource.next(message);\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { ServerUrl } from '../../statics/server-url';\nimport { User } from '../../model/model.user';\nimport { Role } from '../../model/model.role';\nimport { SearchResult } from '../../model/model.search-result';\n\n\n@Injectable()\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  get(id: string): Observable<User> {\n    return this.http.get<User>(ServerUrl.rootUrl + '/api/user/' + id);\n  }\n\n  getAll(): Observable<User[]> {\n    return this.http.get<User[]>(ServerUrl.rootUrl + '/api/user/all');\n  }\n\n  search(params: HttpParams): Observable<SearchResult> {\n    return this.http.get<SearchResult>(ServerUrl.rootUrl + '/api/user/search', { params });\n  }\n\n  getByUsername(username: string): Observable<any> {\n    return this.http.get<any>(ServerUrl.rootUrl + '/api/user/username/' + username);\n  }\n\n  createUser(user: User): Observable<Boolean> {\n    return this.http.post<Boolean>(ServerUrl.rootUrl + '/api/user/create', user) \n  }\n\n  updateUser(user: User): Observable<Boolean> {\n    return this.http.post<Boolean>(ServerUrl.rootUrl + '/api/user/update', user) \n  }\n\n  selfUpdate(user: User): Observable<User> {\n    return this.http.post<User>(ServerUrl.rootUrl + '/api/user/userSelfUpdate', user) \n  }\n\n  getRoles(): Observable<Role[]>{\n    return this.http.get<Role[]>(ServerUrl.rootUrl + '/api/user/roles');\n  }\n\n  isUsernameTaken(username: string): Observable<boolean>{\n    return this.http.get<boolean>(ServerUrl.rootUrl + '/api/user/isTaken/' + username);\n  }\n\n  deleteUser(user: User): Observable<boolean> {\n    return this.http.delete<boolean>(ServerUrl.rootUrl + '/api/user/delete/' + user.id);\n  }\n}\n","import { Validators, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\nimport { debounceTime, distinctUntilChanged, take, switchMap, map } from 'rxjs/operators';\n\nimport { Role } from '../model/model.role';\nimport { UserService } from '../services/user/user.service';\nimport { Observable } from 'rxjs';\nimport { of as observableOf } from 'rxjs';\n\n\nexport class AppValidador extends Validators {\n\n  public static passwordMinLenght = 6\n\n  private static parentControlsValue(control: AbstractControl, controlKey : string) {\n    if (control != undefined &&  control.parent != undefined && control.parent.controls != undefined ){\n      const parentControls = control.parent.controls\n      if (parentControls[controlKey] == undefined) {\n        console.error(\"The key \" + controlKey + \" don't exists in this validator control.\");\n        return null\n      }\n\n      return parentControls[controlKey].value\n    }\n\n  }\n  \n  static match(controlKey : string): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n\n      const valueToMatch = AppValidador.parentControlsValue(control, controlKey)\n      if (control.value !== undefined && control.value != valueToMatch) {\n        return { 'match': true };\n      }\n      return null;\n    };\n  }\n}\n\nexport class UserValidador extends Validators {\n\n  static validateRoles (roles : Role[]): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      // console.log(control);\n      \n      for (const role of roles){\n        if (role.selected) {\n          return null\n        }\n      }\n      return { 'notSelected': true }\n    };\n  }\n\n  static validateUsername(userService: UserService, time: number = 500, blacklist: string[] = []) {\n    return (control: AbstractControl): Observable<ValidationErrors|null> => {\n      if (!control.valueChanges){\n        return observableOf(null);\n      } else {\n        if (blacklist.includes(control.value)){\n          return  observableOf(null)\n        }\n        return  control.valueChanges.pipe(\n          debounceTime(time),\n          distinctUntilChanged(),\n          take(1),\n          switchMap(() => userService.isUsernameTaken(control.value)),\n          map(usernameIsTaken => {\n            return usernameIsTaken ? {'isTaken': true} : null\n          })\n        )\n      }\n    }\n  }\n}","import { User } from '../model/model.user';\n\nexport class LocalStorage {\n    \n    static get currentUser(): User {\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        return currentUser\n    }\n\n    static removeCurrentUser() {\n        localStorage.removeItem('currentUser');\n    }\n\n    static saveCurrentUser(currentUser: User){\n        localStorage.setItem('currentUser', JSON.stringify(currentUser));\n    }\n}","export class ServerUrl {\n    private static API_URL = 'http://localhost:5000';\n\n    static get rootUrl(): string {\n        return this.API_URL;\n    }\n}","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { LocalStorage } from '../statics/local-storage';\nimport { Role } from '../model/model.role';\n\n@Injectable()\nexport class LoginPermission implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (LocalStorage.currentUser) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n    return false;\n  }\n}\n\n@Injectable()\nexport class AdminPermission implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (LocalStorage.currentUser && LocalStorage.currentUser.roles.includes(\"ROLE_ADMIN\")) {\n      return true;\n    }\n\n    // Don't have admin role.\n    this.router.navigate(['/'], { queryParams: { returnUrl: state.url }});\n    return false;\n  }\n}\n\n@Injectable()\nexport class SameUserPermission implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (LocalStorage.currentUser) {\n      if (route.params.id && route.params.id == LocalStorage.currentUser.id) {\n        return true;\n      } else if (route.params.username && route.params.username == LocalStorage.currentUser.username){\n        return true;\n      } else {\n        // Not the same user.\n        this.router.navigate(['/'], { queryParams: { returnUrl: state.url }});\n        return false;\n      }\n    }\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}